@model MapItPrices.Models.Item
@{
    string name = ViewData.TemplateInfo.HtmlFieldPrefix;
    string id = name.Replace(".", "_");
    string seperator = string.IsNullOrEmpty(name) ? "" : "_";

    string idField = id + seperator + "ID";
    string nameField = id + seperator + "Name";
    string UPCField = id + seperator + "UPC";
    string sizeField = id + seperator + "Size";
    string brandField = id + seperator + "Brand";
}
@*<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
*@
<div id="NewItem">
    <fieldset>
        <legend>Item</legend>
        @Html.HiddenFor(model => model.ID)
        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.UPC)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UPC)
            @Html.ValidationMessageFor(model => model.UPC)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Size)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Size)
            @Html.ValidationMessageFor(model => model.Size)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Brand)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Brand)
            @Html.ValidationMessageFor(model => model.Brand)
        </div>
        <div class="editor-field">
            <input type="text" id="Categories" />
            <input type="hidden" id="Category_Ids" />
        </div>
    </fieldset>
    <a id="create_item_button">Create It!</a>
</div>
<div id="SimilarItems" class="ui-widget">
</div>
<span id="result"></span>
<p>
    <div class="ui-state-highlight ui-corner-all" style="margin-top: 20px; padding: 0 .7em;"
        id="createItemSucceded">
        <p>
            <span class="ui-icon ui-icon-info" style="float: left; margin-right: .3em;"></span>
            <strong>Hey!</strong> I can't believe that worked! Good Job!</p>
    </div>
    <div class="ui-state-error ui-corner-all" style="padding: 0 .7em;" id="createItemFailed">
        <p>
            <span class="ui-icon ui-icon-alert" style="float: left; margin-right: .3em;"></span>
            <strong>Alert:</strong> Awwwww... Failed to create new Item. :(
        </p>
    </div>
</p>
<script type="text/javascript">
    $(function () {
        var successMessage = $("#createItemSucceded");
        var failureMessage = $("#createItemFailed");

        successMessage.hide();
        failureMessage.hide();

        $("#@nameField").autocomplete({
            source: "/API/SearchItems",
            focus: function (event, ui) {
                $("#nameField").val(ui.item.Name);
                return false;
            },
            minLength: 1,
            select: function (event, ui) {
                $("#@nameField").val(ui.item.Name + ", " + ui.item.Size);
                $("#@idField").val(ui.item.ID);
                return false;
            }
        }).data("autocomplete")._renderItem = function (ul, item) {
            return $("<li></li>")
                .data("item.autocomplete", item)
                .append("<a>" + item.Name + ", " + item.Size + " by " + item.Brand + "</a>")
                .appendTo(ul);
        };

        $("#create_item_button").button()
            .click(function () {
                successMessage.hide();
                failureMessage.hide();

                var item = { 
                    Name: $("#@nameField").val(),
                    UPC: $("#@UPCField").val(),
                    Size: $("#@sizeField").val(),
                    Brand: $("#@brandField").val(),
                };

                $.ajax({
                    url: '/API/CreateItem',
                    type: "POST",
                    data: JSON.stringify(item),
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    complete: function (xhr, statusText) {
                        var json_data = $.parseJSON(xhr.responseText);
                        if (json_data.Success === true) {
                            failureMessage.hide();
                            successMessage.show('slow', function () {
                                setTimeout(function () {
                                    successMessage.fadeOut();
                                }, 1000)});
                        }
                        else {
                            successMessage.hide();
                            failureMessage.show('slow');
                        }

                        try {
                            createItemComplete(json_data);
                        }
                        catch (err) {
                        }
                    }
                });

                return false;
            });
    });
</script>
