//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace MapItPrices.Models
{
    public partial class StoreItem
    {
        #region Primitive Properties
    
        public virtual int ItemId
        {
            get { return _itemId; }
            set
            {
                if (_itemId != value)
                {
                    if (Item != null && Item.ID != value)
                    {
                        Item = null;
                    }
                    _itemId = value;
                }
            }
        }
        private int _itemId;
    
        public virtual int StoreId
        {
            get { return _storeId; }
            set
            {
                if (_storeId != value)
                {
                    if (Store != null && Store.ID != value)
                    {
                        Store = null;
                    }
                    _storeId = value;
                }
            }
        }
        private int _storeId;
    
        public virtual decimal Price
        {
            get;
            set;
        }
    
        public virtual System.DateTime LastUpdated
        {
            get;
            set;
        }
    
        public virtual int UserID
        {
            get { return _userID; }
            set
            {
                if (_userID != value)
                {
                    if (User != null && User.ID != value)
                    {
                        User = null;
                    }
                    _userID = value;
                }
            }
        }
        private int _userID;
    
        public virtual System.DateTime Created
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual Item Item
        {
            get { return _item; }
            set
            {
                if (!ReferenceEquals(_item, value))
                {
                    var previousValue = _item;
                    _item = value;
                    FixupItem(previousValue);
                }
            }
        }
        private Item _item;
    
        public virtual Store Store
        {
            get { return _store; }
            set
            {
                if (!ReferenceEquals(_store, value))
                {
                    var previousValue = _store;
                    _store = value;
                    FixupStore(previousValue);
                }
            }
        }
        private Store _store;
    
        public virtual User User
        {
            get { return _user; }
            set
            {
                if (!ReferenceEquals(_user, value))
                {
                    var previousValue = _user;
                    _user = value;
                    FixupUser(previousValue);
                }
            }
        }
        private User _user;

        #endregion
        #region Association Fixup
    
        private void FixupItem(Item previousValue)
        {
            if (previousValue != null && previousValue.StoreItems.Contains(this))
            {
                previousValue.StoreItems.Remove(this);
            }
    
            if (Item != null)
            {
                if (!Item.StoreItems.Contains(this))
                {
                    Item.StoreItems.Add(this);
                }
                if (ItemId != Item.ID)
                {
                    ItemId = Item.ID;
                }
            }
        }
    
        private void FixupStore(Store previousValue)
        {
            if (previousValue != null && previousValue.StoreItems.Contains(this))
            {
                previousValue.StoreItems.Remove(this);
            }
    
            if (Store != null)
            {
                if (!Store.StoreItems.Contains(this))
                {
                    Store.StoreItems.Add(this);
                }
                if (StoreId != Store.ID)
                {
                    StoreId = Store.ID;
                }
            }
        }
    
        private void FixupUser(User previousValue)
        {
            if (previousValue != null && previousValue.StoreItems.Contains(this))
            {
                previousValue.StoreItems.Remove(this);
            }
    
            if (User != null)
            {
                if (!User.StoreItems.Contains(this))
                {
                    User.StoreItems.Add(this);
                }
                if (UserID != User.ID)
                {
                    UserID = User.ID;
                }
            }
        }

        #endregion
    }
}
